{"version":3,"file":"static/webpack/static\\development\\pages\\_app.js.30bc16fad25c328fe135.hot-update.js","sources":["webpack:///./pages/signup.js"],"sourcesContent":["import React, { useCallback, useState, useEffect } from 'react';\r\nimport { Button, Checkbox, Form, Input } from 'antd';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Router from 'next/router';\r\nimport { SIGN_UP_REQUEST } from '../reducers/user';\r\n\r\nconst TextInput = ({ value }) => <div>{value}</div>;\r\n\r\nTextInput.propTypes = {\r\n    value: PropTypes.string,\r\n};\r\n\r\nexport const useInput = (initValue = null) => {\r\n    const [value, setter] = useState(initValue);\r\n    const handler = useCallback(e => {\r\n        setter(e.target.value);\r\n    }, []);\r\n    return [value, handler];\r\n};\r\n\r\nconst Signup = () => {\r\n    const [passwordCheck, setPasswordCheck] = useState('');\r\n    const [term, setTerm] = useState(false);\r\n    const [passwordError, setPasswordError] = useState(false);\r\n    const [termError, setTermError] = useState(false);\r\n\r\n    const [id, onChangeId] = useInput('');\r\n    const [nick, onChangeNick] = useInput('');\r\n    const [password, onChangePassword] = useInput('');\r\n    const dispatch = useDispatch();\r\n    const { isSigningUp, me } = useSelector(state => state.user);\r\n\r\n    useEffect(() => {\r\n        if (me) {\r\n            alert('로그인했으니 메인페이지로 이동합니다.');\r\n            Router.push('/');\r\n        }\r\n    }, [me && me.id]);\r\n\r\n    const onSubmit = useCallback(\r\n        e => {\r\n            e.preventDefault();\r\n            if (password !== passwordCheck) {\r\n                return setPasswordError(true);\r\n            }\r\n            if (!term) {\r\n                return setTermError(true);\r\n            }\r\n            return dispatch({\r\n                type: SIGN_UP_REQUEST,\r\n                data: {\r\n                    userId: id,\r\n                    password,\r\n                    nickname: nick,\r\n                },\r\n            });\r\n        },\r\n        [id, nick, password, passwordCheck, term],\r\n    );\r\n\r\n    const onChangePasswordCheck = useCallback(\r\n        e => {\r\n            setPasswordError(e.target.value !== password);\r\n            setPasswordCheck(e.target.value);\r\n        },\r\n        [password],\r\n    );\r\n\r\n    const onChangeTerm = useCallback(e => {\r\n        setTermError(false);\r\n        setTerm(e.target.checked);\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <Form onSubmit={onSubmit} style={{ padding: 10 }}>\r\n                <TextInput value=\"135135\" />\r\n                <div>\r\n                    <label htmlFor=\"user-id\">아이디</label>\r\n                    <br />\r\n                    <Input\r\n                        name=\"user-id\"\r\n                        value={id}\r\n                        required\r\n                        onChange={onChangeId}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"user-nick\">닉네임</label>\r\n                    <br />\r\n                    <Input\r\n                        name=\"user-nick\"\r\n                        value={nick}\r\n                        required\r\n                        onChange={onChangeNick}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"user-password\">비밀번호</label>\r\n                    <br />\r\n                    <Input\r\n                        name=\"user-password\"\r\n                        type=\"password\"\r\n                        value={password}\r\n                        required\r\n                        onChange={onChangePassword}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"user-password-check\">비밀번호체크</label>\r\n                    <br />\r\n                    <Input\r\n                        name=\"user-password-check\"\r\n                        type=\"password\"\r\n                        value={passwordCheck}\r\n                        required\r\n                        onChange={onChangePasswordCheck}\r\n                    />\r\n                    {passwordError && (\r\n                        <div style={{ color: 'red' }}>\r\n                            비밀번호가 일치하지 않습니다.\r\n                        </div>\r\n                    )}\r\n                </div>\r\n                <div>\r\n                    <Checkbox\r\n                        name=\"user-term\"\r\n                        checked={term}\r\n                        onChange={onChangeTerm}\r\n                    >\r\n                        제로초 말을 잘 들을 것을 동의합니다.\r\n                    </Checkbox>\r\n                    {termError && (\r\n                        <div style={{ color: 'red' }}>\r\n                            약관에 동의하셔야 합니다.\r\n                        </div>\r\n                    )}\r\n                </div>\r\n                <div style={{ marginTop: 10 }}>\r\n                    <Button\r\n                        type=\"primary\"\r\n                        htmlType=\"submit\"\r\n                        loading={isSigningUp}\r\n                    >\r\n                        가입하기\r\n                    </Button>\r\n                </div>\r\n            </Form>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Signup;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AADA;AAIA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAQA;AACA;AAVA;AAUA;AAAA;AAVA;AAAA;AACA;AAWA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAHA;AAFA;AAQA;AAIA;AAEA;AACA;AACA;AAIA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AACA;AACA;;;;A","sourceRoot":""}